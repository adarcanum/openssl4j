name: Platform Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  qemu_info:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU for all platforms
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.0.0
          platforms: all
      -
        name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

  qemu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_x64_linux_hotspot_11.0.13_8.tar.gz
          - platform: linux/arm64
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.13_8.tar.gz
          - platform: linux/s390x
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_s390x_linux_hotspot_11.0.13_8.tar.gz
          - platform: linux/arm/v7
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_arm_linux_hotspot_11.0.13_8.tar.gz
          - platform: linux/arm/v6
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_arm_linux_hotspot_11.0.13_8.tar.gz
          - platform: linux/ppc64le
            jdk_url:  https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.13%2B8/OpenJDK11U-jdk_ppc64le_linux_hotspot_11.0.13_8.tar.gz
          #- platform: linux/riscv64
          #- platform: linux/386
          #- platform: linux/mips64le
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU for ${{ matrix.platform }}
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.0.0
          platforms: ${{ matrix.platform }}
      -
        name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1        
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build on ${{ matrix.platform }}
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: ${{ matrix.platform }}
          outputs: "type=tar,dest=image.tar"
          build-args: JDK_URL=${{ matrix.jdk_url }}
      -
        name: Show it
        run: |
          ls -alR image.tar
          tar -tvf image.tar
          
      -
        name: Extract shared library
        run: |
          tar --wildcards -xvf image.tar openssl4j/target/libopenssl4j-*.so

      - uses: actions/upload-artifact@v2
        with:
          name: shared_objects
          path: openssl4j/target/*.so
          
